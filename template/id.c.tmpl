%#  -*- c -*-
/* DO NOT EDIT THIS FILE DIRECTLY */
/**********************************************************************

  id.c -

  $Author$
  created at: Wed Dec  5 02:36:10 2012

  Copyright (C) 2004-2007 Koichi Sasada

**********************************************************************/
<%
defs = File.join(File.dirname(File.dirname(erb.filename)), "defs/id.def")
ids = eval(File.read(defs), nil, defs)
ops = ids[:token_op].uniq {|id, op, token| token && op}
%>
#ifndef GENERATE_YJIT_IDS

% ops.each do |_id, _op, token|
%   next unless token
#define t<%=token%> RUBY_TOKEN(<%=token%>)
% end

static const struct {
    unsigned short token;
    const char name[3], term;
} op_tbl[] = {
% ops.each do |_id, op, token|
%   next unless token
    {t<%=token%>, "<%=op%>"},
% end
};

static void
Init_id(void)
{
    rb_encoding *enc = rb_usascii_encoding();

% ids[:predefined].each do |token, name|
    REGISTER_SYMID(id<%=token%>, "<%=name%>");
% end
}

#else

#include <stdio.h>
#include "id.h"
#define dump(x) printf("pub const "#x": ruby_method_ids = %d;\n", x)

int
main(void)
{
% ids[:token_op].uniq {|_, op| op}.each do |id, op, token|
    dump(id<%=id%>);
% end
% ids[:preserved].each do |token|
    dump(id<%=token%>);
% end
% ids.each_pair do |type, tokens|
%   /^[A-Z]/ =~ type or next
%   tokens.each do |token|
    dump(id<%=token%>);
%   end
% end
    dump(idLAST_OP_ID);
    puts("pub type ruby_method_ids = u32;\n");
    return 0;
}
#endif
