name: Windows
on:
  push:
    paths-ignore:
      - 'doc/**'
      - '**/man/*'
      - '**.md'
      - '**.rdoc'
      - '**/.document'
      - '.*.yml'
  pull_request:
    # Do not use paths-ignore for required status checks
    # https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks
  merge_group:

concurrency:
  group: ${{ github.workflow }} / ${{ startsWith(github.event_name, 'pull') && github.ref_name || github.sha }}
  cancel-in-progress: ${{ startsWith(github.event_name, 'pull') }}

permissions:
  contents: read

jobs:
  make:
    strategy:
      matrix:
        include:
          - os: 2019
            vc: 2015
            vcvars: '10.0.14393.0 -vcvars_ver=14.0' # The oldest Windows 10 SDK w/ VC++ 2015 toolset (v140)
            test_task: check
          - os: 2019
            vc: 2019
            test_task: check
          - os: 2022
            vc: 2019
            vcvars: '10.0.22621.0 -vcvars_ver=14.2' # The defautl Windows 11 SDK and toolset are broken at windows-2022
            test_task: check
          - os: 2025
            vc: 2019
            vcvars: '10.0.22621.0 -vcvars_ver=14.2'
            test_task: check
          - os: 11-arm
            test_task: 'btest test-basic test-tool' # check and test-spec are broken yet.
            target: arm64
          - os: 2022
            vc: 2019
            vcvars: '10.0.22621.0 -vcvars_ver=14.2'
            test_task: test-bundled-gems
      fail-fast: false

    runs-on: windows-${{ matrix.os < 2022 && '2019' || matrix.os }}

    if: >-
      ${{!(false
      || contains(github.event.head_commit.message, '[DOC]')
      || contains(github.event.head_commit.message, 'Document')
      || contains(github.event.pull_request.title, '[DOC]')
      || contains(github.event.pull_request.title, 'Document')
      || contains(github.event.pull_request.labels.*.name, 'Documentation')
      || (github.event_name == 'push' && github.event.pull_request.user.login == 'dependabot[bot]')
      )}}

    name: Windows ${{ matrix.os }}/Visual C++ ${{ matrix.vc }} (${{ matrix.test_task }})

    env:
      GITPULLOPTIONS: --no-tags origin ${{ github.ref }}
      OS_VER: windows-${{ matrix.os < 2022 && '2019' || matrix.os }}
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.target || 'x64' }}-windows

    steps:
      - run: md build
        working-directory:

      - uses: ruby/setup-ruby@d8d83c3960843afb664e821fed6be52f37da5267 # v1.231.0
        with:
          ruby-version: '3.0'
          bundler: none
          windows-toolchain: none
        if: ${{ matrix.os != '11-arm' }}

      - name: Install libraries with scoop
        run: |
          Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
          iwr -useb get.scoop.sh | iex
          Join-Path (Resolve-Path ~).Path "scoop\shims" >> $Env:GITHUB_PATH
          scoop install vcpkg uutils-coreutils cmake@3.31.6
        shell: pwsh

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: /.github

      - uses: ./.github/actions/setup/directories
        with:
          srcdir: src
          builddir: build

      - name: setup env
        # Available Ruby versions: https://github.com/actions/runner-images/blob/main/images/windows/Windows2019-Readme.md#ruby
        # %TEMP% is inconsistent with %TMP% and test-all expects they are consistent.
        # https://github.com/actions/virtual-environments/issues/712#issuecomment-613004302
        run: |
          ::- Set up VC ${{ matrix.vc }}
          set vswhere="%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe"
          if not exist %vswhere% set vswhere="%ProgramFiles%\Microsoft Visual Studio\Installer\vswhere.exe"
          for /f "delims=;" %%I in ('%vswhere% -latest -property installationPath') do (
            set VCVARS="%%I\VC\Auxiliary\Build\vcvars${{ endsWith(matrix.os, 'arm') && 'arm' || '' }}64.bat"
          )
          set VCVARS
          set | uutils sort > old.env
          call %VCVARS% ${{ matrix.vcvars || '' }}
          nmake -f nul
          set TMP=%LOCALAPPDATA%\Temp
          set TEMP=%TMP%
          set MAKEFLAGS=l
          set /a TEST_JOBS=(15 * %NUMBER_OF_PROCESSORS% / 10) > nul
          set RUBY_OPT_DIR=%GITHUB_WORKSPACE:\=/%/src/vcpkg_installed/%VCPKG_DEFAULT_TRIPLET%
          set | uutils sort > new.env
          uutils comm -13 old.env new.env >> %GITHUB_ENV%
          del *.env

      - name: baseruby version
        run: ruby -v

      - name: compiler version
        run: cl

      - name: volume info
        run: Get-Volume
        shell: pwsh

        # vcpkg built-in cache is not working now
      - name: Restore vcpkg artifact
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ${{ env.LOCALAPPDATA }}\vcpkg\archives
          key: windows-${{ matrix.os }}-vcpkg-${{ hashFiles('src/vcpkg.json') }}

      - name: Install libraries with vcpkg
        run: |
          vcpkg install --vcpkg-root=%USERPROFILE%\scoop\apps\vcpkg\current
        working-directory: src

      # TODO: We should use `../src` instead of `D:/a/ruby/ruby/src`
      - name: Configure
        run: >-
          ../src/win32/configure.bat --disable-install-doc
          --with-opt-dir=%RUBY_OPT_DIR%
          --with-gmp

      - run: type Makefile

      - run: nmake prepare-vcpkg

      - run: nmake incs

      - run: nmake extract-extlibs

      # On all other platforms, test-spec depending on extract-gems (in common.mk) is enough.
      # But not for this Visual Studio workflow. So here we extract gems before building.
      - run: nmake extract-gems

      # windows-11-arm runner cannot run `ruby tool/file2lastrev.rb --revision.h --output=revision.h`
      - run: |
          set TZ=UTC
          for /f "tokens=1,2" %%I in ('git log -1 "--date=iso-local" "--format=%%cd"') do (
              set d=%%I
              set t=%%J
          )
          set dt=%d%T%t%Z
          set y=%d:~0,4%
          set m=%d:~5,2%
          set d=%d:~8,2%
          if "%m:~0,1%" == "0" set m=%m:~1,1%
          if "%d:~0,1%" == "0" set m=%d:~1,1%
          (
          echo #define RUBY_REVISION "%GITHUB_SHA:~0,10%"
          echo #define RUBY_FULL_REVISION "%GITHUB_SHA%"
          echo #define RUBY_BRANCH_NAME "%GITHUB_REF:refs/heads/=%"
          echo #define RUBY_RELEASE_DATETIME "%dt%"
          echo #define RUBY_RELEASE_YEAR %y%
          echo #define RUBY_RELEASE_MONTH %m%
          echo #define RUBY_RELEASE_DAY %d%
          )>revision.h
          type revision.h
        working-directory: src

  result:
    if: ${{ always() }}
    name: ${{ github.workflow }} result
    runs-on: windows-latest
    needs: [make]
    steps:
      - run: exit 1
        working-directory:
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}

defaults:
  run:
    working-directory: build
    shell: cmd
