name: Compilations [DEBUG]

on: [push, pull_request]

# Github actions does not support YAML anchors.  This creative use of
# environment variables (plus the "echo ::set-env" hack) is to reroute that
# restriction.
env:
  default_cc: clang-11
  append_cc: ''

  # -O1 is faster than -O3 in our tests... Majority of time are consumed trying
  # to optimize binaries.  Also Github Actions runs on a relatively modern CPU
  # compared to, say, GCC 4 or Clang 3.  We don't specify `-march=native`
  # because compilers tend not understand what the CPU is.
  optflags: '-O1 -march=x86-64 -mtune=generic'

  # -g0 disables backtraces when SEGV.  Do not set that.
  debugflags: '-ggdb3'

  default_configure: >-
    --enable-debug-env
    --disable-install-doc
    --with-ext=-test-/cxxanyargs,+
  append_configure: >-
    --without-valgrind
    --without-jemalloc
    --without-gmp

  UPDATE_UNICODE: >-
    UNICODE_FILES=.
    UNICODE_PROPERTY_FILES=.
    UNICODE_AUXILIARY_FILES=.
    UNICODE_EMOJI_FILES=.
  CONFIGURE_TTY: never
  GITPULLOPTIONS: --no-tags origin ${{github.ref}}
  RUBY_DEBUG: ci rgengc
  RUBY_TESTOPTS: >-
    -q
    --color=always
    --tty=no

jobs:
  compile:
    strategy:
      fail-fast: false
      matrix:
        entry:
          - { key: cppflags, name: NDEBUG,                         value: '-DNDEBUG' }
          - { key: cppflags, name: RUBY_DEBUG,                     value: '-DRUBY_DEBUG' }
          - { key: cppflags, name: ARRAY_DEBUG,                    value: '-DARRAY_DEBUG' }
          - { key: cppflags, name: BIGNUM_DEBUG,                   value: '-DBIGNUM_DEBUG' }
          - { key: cppflags, name: CCAN_LIST_DEBUG,                value: '-DCCAN_LIST_DEBUG' }
          - { key: cppflags, name: CPDEBUG=-1,                     value: '-DCPDEBUG=-1' }
          - { key: cppflags, name: ENC_DEBUG,                      value: '-DENC_DEBUG' }
          - { key: cppflags, name: GC_DEBUG,                       value: '-DGC_DEBUG' }
          - { key: cppflags, name: HASH_DEBUG,                     value: '-DHASH_DEBUG' }
          - { key: cppflags, name: ID_TABLE_DEBUG,                 value: '-DID_TABLE_DEBUG' }
          - { key: cppflags, name: RGENGC_DEBUG=-1,                value: '-DRGENGC_DEBUG=-1' }
          - { key: cppflags, name: SYMBOL_DEBUG,                   value: '-DSYMBOL_DEBUG' }
          - { key: cppflags, name: THREAD_DEBUG=-1,                value: '-DTHREAD_DEBUG=-1' }

          - { key: cppflags, name: DEBUG_FIND_TIME_NUMGUESS,       value: '-DDEBUG_FIND_TIME_NUMGUESS' }
          - { key: cppflags, name: DEBUG_INTEGER_PACK,             value: '-DDEBUG_INTEGER_PACK' }
          - { key: cppflags, name: ENABLE_PATH_CHECK,              value: '-DENABLE_PATH_CHECK' }

    name: ${{ matrix.entry.name }}
    runs-on: ubuntu-latest
    container: shyouhei/c-compilers:latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - name: setenv
        run: |
          echo ::set-env name=${{ matrix.entry.key }}::${{ matrix.entry.value }}
          echo ::set-env name=make::make -sj$((1 + $(nproc --all)))
      - run: mkdir build
      - uses: actions/checkout@v2
        with:
          path: src
      - run: autoconf
        working-directory: src
      - name: Run configure
        working-directory: build
        run: |
          ../src/configure -C \
            ${default_configure} \
            ${append_configure} \
            --with-gcc="${default_cc} ${append_cc}"
      - run: $make incs
        working-directory: build
      - run: $make
        working-directory: build
      - run: $make test
        working-directory: build
      - run: $make install
        working-directory: build
        if: "matrix.entry.name == '-O3'"
      - run: /usr/local/bin/gem install --no-doc timezone tzinfo
        working-directory: build
        if: "matrix.entry.name == '-O3'"
      - run: $make test-tool
        working-directory: build
        if: "matrix.entry.name == '-O3'"
      - run: $make test-all TESTS='-- ruby -ext-'
        working-directory: build
        if: "matrix.entry.name == '-O3'"
      - run: $make test-spec
        working-directory: build
        if: "matrix.entry.name == '-O3'"

      - uses: k0kubun/action-slack@v2.0.0
        with:
          payload: |
            {
              "ci": "GitHub Actions",
              "env": "${{ github.workflow }} / ${{ matrix.entry.name }}",
              "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "commit": "${{ github.sha }}",
              "branch": "${{ github.ref }}".split('/').reverse()[0]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SIMPLER_ALERTS_URL }} # ruby-lang slack: ruby/simpler-alerts-bot
        if: failure() && github.event_name == 'push'
